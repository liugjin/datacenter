// Generated by IcedCoffeeScript 108.0.13

/*
* File: dispatch-controller
* User: Pu
* Date: 2019/05/18
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['clc.foundation.angular/controllers/project-base-controller', 'underscore'], function(base, _) {
  var DispatchController, exports;
  DispatchController = (function(_super) {
    __extends(DispatchController, _super);

    function DispatchController($scope, $rootScope, $routeParams, $location, $window, $timeout, modelManager, modelEngine, uploadService, options) {
      DispatchController.__super__.constructor.call(this, $scope, $rootScope, $routeParams, $location, $window, $timeout, modelManager, modelEngine, uploadService, options);
    }

    DispatchController.prototype.load = function(callback, refresh) {
      var defaultUrl, filter;
      defaultUrl = "dashboard/" + this.$routeParams.user + "/" + this.$routeParams.project;
      filter = {
        user: this.$routeParams.user,
        project: this.$routeParams.project
      };
      return this.modelEngine.loadProject(filter, null, (function(_this) {
        return function(err, project) {
          if (!_.isEmpty(project.model._role.portal)) {
            defaultUrl = project.model._role.portal;
          }
          return _this.goto(defaultUrl);
        };
      })(this));
    };

    return DispatchController;

  })(base.ProjectBaseController);
  return exports = {
    DispatchController: DispatchController
  };
});
