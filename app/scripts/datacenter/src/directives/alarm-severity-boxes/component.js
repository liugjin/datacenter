// Generated by IcedCoffeeScript 108.0.11

/*
* File: alarm-severity-boxes-directive
* User: David
* Date: 2019/05/30
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var AlarmSeverityBoxesDirective, exports;
  AlarmSeverityBoxesDirective = (function(_super) {
    __extends(AlarmSeverityBoxesDirective, _super);

    function AlarmSeverityBoxesDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.subscribeStationEvents = __bind(this.subscribeStationEvents, this);
      this.show = __bind(this.show, this);
      this.id = "alarm-severity-boxes";
      AlarmSeverityBoxesDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    AlarmSeverityBoxesDirective.prototype.setScope = function() {};

    AlarmSeverityBoxesDirective.prototype.setCSS = function() {
      return css;
    };

    AlarmSeverityBoxesDirective.prototype.setTemplate = function() {
      return view;
    };

    AlarmSeverityBoxesDirective.prototype.show = function(scope, element, attrs) {
      scope.severities = {};
      _.each(scope.project.dictionary.eventseverities.items, function(item) {
        return scope.severities[item.model.severity] = {
          name: item.model.name,
          color: item.model.color,
          value: 0
        };
      });
      scope.subscriptions = {};
      scope.events = {};
      return this.subscribeStationEvents(scope, scope.station);
    };

    AlarmSeverityBoxesDirective.prototype.subscribeStationEvents = function(scope, station) {
      var filter, sta, _i, _len, _ref, _ref1, _results;
      if (!station) {
        return;
      }
      filter = {
        user: station.model.user,
        project: station.model.project,
        station: station.model.station
      };
      if ((_ref = scope.subscriptions[station.model.station]) != null) {
        _ref.dispose();
      }
      scope.subscriptions[station.model.station] = this.commonService.eventLiveSession.subscribeValues(filter, (function(_this) {
        return function(err, event) {
          return _this.processEvent(scope, event != null ? event.message : void 0);
        };
      })(this));
      _ref1 = station.stations;
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        sta = _ref1[_i];
        _results.push(this.subscribeStationEvents(scope, sta));
      }
      return _results;
    };

    AlarmSeverityBoxesDirective.prototype.processEvent = function(scope, event) {
      var key;
      if (!event) {
        return;
      }
      key = "" + event.user + "." + event.project + "." + event.station + "." + event.equipment + "." + event.event + "." + event.severity + "." + event.startTime;
      if (!scope.events[key] && !event.endTime) {
        if (scope.severities[event.severity]) {
          scope.severities[event.severity].value += 1;
        }
      } else if (scope.events[key] && !scope.events[key].endTime && event.endTime) {
        scope.severities[event.severity].value -= 1;
      }
      return scope.events[key] = event;
    };

    AlarmSeverityBoxesDirective.prototype.resize = function(scope) {};

    AlarmSeverityBoxesDirective.prototype.dispose = function(scope) {
      var key, subscribe, _ref, _results;
      _ref = scope.subscriptions;
      _results = [];
      for (key in _ref) {
        subscribe = _ref[key];
        _results.push(subscribe != null ? subscribe.dispose() : void 0);
      }
      return _results;
    };

    return AlarmSeverityBoxesDirective;

  })(base.BaseDirective);
  return exports = {
    AlarmSeverityBoxesDirective: AlarmSeverityBoxesDirective
  };
});
