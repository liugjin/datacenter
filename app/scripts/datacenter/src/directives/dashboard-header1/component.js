// Generated by IcedCoffeeScript 108.0.12

/*
* File: dashboard-header1-directive
* User: David
* Date: 2019/05/07
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var DashboardHeader1Directive, exports;
  DashboardHeader1Directive = (function(_super) {
    __extends(DashboardHeader1Directive, _super);

    function DashboardHeader1Directive($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "dashboard-header1";
      DashboardHeader1Directive.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    DashboardHeader1Directive.prototype.setScope = function() {};

    DashboardHeader1Directive.prototype.setCSS = function() {
      return css;
    };

    DashboardHeader1Directive.prototype.setTemplate = function() {
      return view;
    };

    DashboardHeader1Directive.prototype.show = function(scope, element, attrs) {
      var elems, instances, _ref;
      this.publishEventBus('menuState', {
        'menu': 'menu'
      });
      if (!scope.firstload) {
        return;
      }
      scope.title = (_ref = scope.parameters.title) != null ? _ref : scope.project.model.setting.name;
      elems = element.find('.dropdown-trigger');
      instances = M.Dropdown.init(elems, {
        hover: true,
        container: element.find('#station-select')[0],
        constrainWidth: false
      });
      scope.document = document;
      scope.selectStation = (function(_this) {
        return function(station) {
          if (!station) {
            return;
          }
          scope.controller.$location.search('station=' + station.model.station);
          return _this.commonService.publishEventBus("stationId", {
            stationId: station.model.station
          });
        };
      })(this);
      scope.day = moment().format('YYYY-MM-DD');
      scope.time = moment().format('HH:mm:ss');
      scope.date = moment().format('dddd');
      clearInterval(scope.interval);
      return scope.interval = setInterval((function(_this) {
        return function() {
          scope.day = moment().format('YYYY-MM-DD');
          scope.time = moment().format('HH:mm:ss');
          scope.date = moment().format('dddd');
          if (scope.time === "23:59:59") {
            window.location.reload();
          }
          return scope.$applyAsync();
        };
      })(this), 1000);
    };

    DashboardHeader1Directive.prototype.resize = function(scope) {};

    DashboardHeader1Directive.prototype.dispose = function(scope) {
      return clearInterval(scope.interval);
    };

    return DashboardHeader1Directive;

  })(base.BaseDirective);
  return exports = {
    DashboardHeader1Directive: DashboardHeader1Directive
  };
});
