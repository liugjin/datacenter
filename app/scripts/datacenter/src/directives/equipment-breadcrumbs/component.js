// Generated by IcedCoffeeScript 108.0.12

/*
* File: equipment-breadcrumbs-directive
* User: David
* Date: 2019/03/16
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var EquipmentBreadcrumbsDirective, exports;
  EquipmentBreadcrumbsDirective = (function(_super) {
    __extends(EquipmentBreadcrumbsDirective, _super);

    function EquipmentBreadcrumbsDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "equipment-breadcrumbs";
      EquipmentBreadcrumbsDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    EquipmentBreadcrumbsDirective.prototype.setScope = function() {};

    EquipmentBreadcrumbsDirective.prototype.setCSS = function() {
      return css;
    };

    EquipmentBreadcrumbsDirective.prototype.setTemplate = function() {
      return view;
    };

    EquipmentBreadcrumbsDirective.prototype.show = function(scope, element, attrs) {
      element.css("display", "block");
      this.showStation(scope);
      scope.selectStation = (function(_this) {
        return function(station) {
          scope.station = station;
          return _this.showStation(scope);
        };
      })(this);
      return scope.selectEquipment = (function(_this) {
        return function(equip) {
          scope.equipment = equip;
          return _this.publishEquipmentId(scope);
        };
      })(this);
    };

    EquipmentBreadcrumbsDirective.prototype.showStation = function(scope) {
      var filter, _ref;
      scope.parents = [];
      filter = scope.parameters.type ? {
        type: scope.parameters.type
      } : null;
      scope.station.loadEquipments(filter, null, (function(_this) {
        return function(err, equips) {
          if (!err) {
            scope.equipments = equips;
          }
          if (!scope.equipment || scope.equipment.model.station !== scope.station.model.station) {
            scope.equipment = equips != null ? equips[0] : void 0;
            return _this.publishEquipmentId(scope);
          }
        };
      })(this));
      this.findParent(scope, scope.station);
      scope.stations = (_ref = scope.parents[0]) != null ? _ref.stations : void 0;
      return scope.parents = scope.parents.reverse();
    };

    EquipmentBreadcrumbsDirective.prototype.findParent = function(scope, station) {
      var parent;
      parent = _.find(scope.project.stations.items, function(sta) {
        return sta.model.station === station.model.parent;
      });
      if (parent) {
        scope.parents.push(parent);
        return this.findParent(scope, parent);
      }
    };

    EquipmentBreadcrumbsDirective.prototype.publishEquipmentId = function(scope) {
      var _ref, _ref1, _ref2, _ref3;
      return this.commonService.publishEventBus("equipmentId", {
        stationId: (_ref = scope.equipment) != null ? (_ref1 = _ref.model) != null ? _ref1.station : void 0 : void 0,
        equipmentId: (_ref2 = scope.equipment) != null ? (_ref3 = _ref2.model) != null ? _ref3.equipment : void 0 : void 0
      });
    };

    EquipmentBreadcrumbsDirective.prototype.resize = function(scope) {};

    EquipmentBreadcrumbsDirective.prototype.dispose = function(scope) {};

    return EquipmentBreadcrumbsDirective;

  })(base.BaseDirective);
  return exports = {
    EquipmentBreadcrumbsDirective: EquipmentBreadcrumbsDirective
  };
});
