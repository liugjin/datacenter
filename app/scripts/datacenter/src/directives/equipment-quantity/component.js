// Generated by IcedCoffeeScript 108.0.11

/*
* File: equipment-quantity-directive
* User: David
* Date: 2019/02/21
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var EquipmentQuantityDirective, exports;
  EquipmentQuantityDirective = (function(_super) {
    __extends(EquipmentQuantityDirective, _super);

    function EquipmentQuantityDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "equipment-quantity";
      EquipmentQuantityDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    EquipmentQuantityDirective.prototype.setScope = function() {};

    EquipmentQuantityDirective.prototype.setCSS = function() {
      return css;
    };

    EquipmentQuantityDirective.prototype.setTemplate = function() {
      return view;
    };

    EquipmentQuantityDirective.prototype.show = function(scope, element, attrs) {
      var getAllStations, initData;
      initData = (function(_this) {
        return function() {
          _this.stationList = [];
          return scope.showEquipment = [
            {
              id: 'ups',
              name: 'ups',
              imgUrl: "" + (_this.getComponentPath('/images/UPS.png')),
              length: 0
            }, {
              id: 'low_voltage_distribution',
              name: '配电柜',
              imgUrl: "" + (_this.getComponentPath('/images/power-box.png')),
              length: 0
            }, {
              id: 'battery',
              name: '蓄电池',
              imgUrl: "" + (_this.getComponentPath('/images/battery.png')),
              length: 0
            }
          ];
        };
      })(this);
      getAllStations = (function(_this) {
        return function(station, callback) {
          if (!station) {
            return;
          }
          if (station.stations.length > 0) {
            _.map(station.stations, function(child) {
              return getAllStations(child);
            });
          }
          _this.stationList.push(station);
          return typeof callback === "function" ? callback(_this.stationList) : void 0;
        };
      })(this);
      initData();
      return getAllStations(scope.station, function(stations) {
        return stations.forEach(function(sta) {
          return sta.loadEquipment(null, null, function(err, equip) {
            var typeLength;
            if (!equip) {
              return;
            }
            typeLength = _.groupBy(equip.station.equipments.items, function(type) {
              return type.model.type;
            });
            return _.map(scope.showEquipment, function(equipmentType) {
              var _ref;
              if (typeLength[equipmentType.id]) {
                return equipmentType.length += (_ref = typeLength[equipmentType.id]) != null ? _ref.length : void 0;
              }
            });
          });
        });
      });
    };

    EquipmentQuantityDirective.prototype.resize = function(scope) {};

    EquipmentQuantityDirective.prototype.dispose = function(scope) {};

    return EquipmentQuantityDirective;

  })(base.BaseDirective);
  return exports = {
    EquipmentQuantityDirective: EquipmentQuantityDirective
  };
});
