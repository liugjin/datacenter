// Generated by IcedCoffeeScript 108.0.12

/*
* File: glvideo-datepicker-directive
* User: David
* Date: 2019/03/01
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment", 'gl-datepicker'], function(base, css, view, _, moment, gl) {
  var GlvideoDatepickerDirective, exports;
  GlvideoDatepickerDirective = (function(_super) {
    __extends(GlvideoDatepickerDirective, _super);

    function GlvideoDatepickerDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "glvideo-datepicker";
      GlvideoDatepickerDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    GlvideoDatepickerDirective.prototype.setScope = function() {};

    GlvideoDatepickerDirective.prototype.setCSS = function() {
      return css;
    };

    GlvideoDatepickerDirective.prototype.setTemplate = function() {
      return view;
    };

    GlvideoDatepickerDirective.prototype.show = function($scope, element, attrs) {
      var setGlDatePicker;
      $scope.time = {
        timedate: moment().startOf('day').format('L')
      };
      setGlDatePicker = function(element, value) {
        if (!value) {
          return;
        }
        return setTimeout(function() {
          return gl = $(element).glDatePicker({
            showAlways: true,
            dowNames: ["日", "一", "二", "三", "四", "五", "六"],
            monthNames: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
            selectedDate: moment(value).toDate(),
            onClick: function(target, cell, date, data) {
              var day, month;
              month = date.getMonth() + 1;
              if (month < 10) {
                month = "0" + month;
              }
              day = date.getDate();
              if (day < 10) {
                day = "0" + day;
              }
              return target.val(date.getFullYear() + "-" + month + "-" + day).trigger("change");
            }
          });
        }, 500);
      };
      setGlDatePicker($('#datevalue')[0], $scope.time.timedate);
      $scope.formatDate = (function(_this) {
        return function(id) {
          switch (id) {
            case 'datevalue':
              $scope.time.timedate = moment($scope.time.timedate).format('L');
              return _this.commonService.publishEventBus('somedayplayback', $scope.time);
          }
        };
      })(this);
      return this.commonService.subscribeEventBus('menu-collapsed', function(d) {
        console.log(d);
        $('.gldp-default').hide();
        return setTimeout(function() {
          var inputvalue, nowvalue;
          inputvalue = $('#datevalue').offset().left;
          switch (d.message.value) {
            case false:
              nowvalue = 256;
              break;
            case true:
              nowvalue = 20;
          }
          console.log(inputvalue);
          console.log(nowvalue);
          $('.gldp-default').css("left", nowvalue + 'px');
          return $('.gldp-default').show();
        }, 500);
      });
    };

    GlvideoDatepickerDirective.prototype.resize = function(scope) {};

    GlvideoDatepickerDirective.prototype.dispose = function(scope) {
      return $('.gldp-default').remove();
    };

    return GlvideoDatepickerDirective;

  })(base.BaseDirective);
  return exports = {
    GlvideoDatepickerDirective: GlvideoDatepickerDirective
  };
});
