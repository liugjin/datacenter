// Generated by IcedCoffeeScript 108.0.11

/*
* File: list-breadcrumbs-directive
* User: David
* Date: 2020/04/27
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var ListBreadcrumbsDirective, exports;
  ListBreadcrumbsDirective = (function(_super) {
    __extends(ListBreadcrumbsDirective, _super);

    function ListBreadcrumbsDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "list-breadcrumbs";
      ListBreadcrumbsDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    ListBreadcrumbsDirective.prototype.setScope = function() {};

    ListBreadcrumbsDirective.prototype.setCSS = function() {
      return css;
    };

    ListBreadcrumbsDirective.prototype.setTemplate = function() {
      return view;
    };

    ListBreadcrumbsDirective.prototype.show = function(scope, element, attrs) {
      var initData;
      if (!scope.firstload) {
        return;
      }
      scope.group = [];
      scope.groupName = [];
      scope.groupList = [];
      scope.level = 0;
      scope.change = (function(_this) {
        return function(obj, level) {
          var result, _ref;
          scope.groupName[level] = obj.title;
          scope.level = level;
          if (obj.folder) {
            scope.groupName[level + 1] = "选择下级";
            scope.groupList[level + 1] = obj.children;
            scope.groupName = scope.groupName.slice(0, level + 2);
            scope.groupList = scope.groupList.slice(0, level + 2);
          } else {
            scope.groupName = scope.groupName.slice(0, level + 1);
          }
          if (((_ref = scope.parameters) != null ? _ref.needChild : void 0) || !_.has(scope.parameters, "needChild")) {
            _this.list = [];
            _this.getAllChild(obj);
            result = _.map(_this.list, function(d) {
              obj = {};
              _.each(d, (function(_this) {
                return function(val, key) {
                  if (key !== "children") {
                    return obj[key] = val;
                  }
                };
              })(this));
              return obj;
            });
            return _this.commonService.publishEventBus("list-breadcrumbs", result);
          } else {
            return _this.commonService.publishEventBus("list-breadcrumbs", obj);
          }
        };
      })(this);
      initData = (function(_this) {
        return function(data) {
          var stationId, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _root;
          if (data.length > 0 && !_this.$routeParams[(_ref = scope.parameters) != null ? _ref.key : void 0] && !((_ref1 = scope.parameters) != null ? _ref1.stationId : void 0)) {
            scope.group = data;
            _root = scope.group[0][0];
            scope.groupName = _root.folder ? [_root.title, "选择下级"] : [_root.title];
            scope.groupList = _root.folder ? [scope.group[0], _root.children] : [scope.group[0]];
            scope.level = 0;
          } else if (data.length > 0 && (_this.$routeParams[(_ref2 = scope.parameters) != null ? _ref2.key : void 0] || ((_ref3 = scope.parameters) != null ? _ref3.stationId : void 0))) {
            stationId = _this.$routeParams[(_ref4 = scope.parameters) != null ? _ref4.key : void 0] ? _this.$routeParams[(_ref5 = scope.parameters) != null ? _ref5.key : void 0] : (_ref6 = scope.parameters) != null ? _ref6.stationId : void 0;
            scope.group = data;
            _.each(scope.group, function(group, index) {
              return _.each(group, function(g) {
                if (g.key === stationId) {
                  scope.groupName = _this.getAllParents(scope.group, g, index);
                  scope.level = index + 1;
                  return scope.groupList = g.folder ? scope.group.slice(0, scope.level + 1) : scope.group.slice(0, scope.level);
                }
              });
            });
          } else {
            scope.group = [];
            scope.groupName = [];
            scope.level = 0;
          }
          return scope.$applyAsync();
        };
      })(this);
      return scope.$watch("parameters.data", (function(_this) {
        return function(data) {
          return initData(data);
        };
      })(this));
    };

    ListBreadcrumbsDirective.prototype.getAllParents = function(data, item, index) {
      var current, _i, _ref, _results;
      current = item;
      this.list = current.folder ? [current.title, "选择下级"] : [current.title];
      if (index > 0) {
        _.each((function() {
          _results = [];
          for (var _i = _ref = index - 1; _ref <= 0 ? _i <= 0 : _i >= 0; _ref <= 0 ? _i++ : _i--){ _results.push(_i); }
          return _results;
        }).apply(this), (function(_this) {
          return function(i) {
            return _.each(data[i], function(d) {
              if (d.key === current.parent) {
                current = d;
                return _this.list.unshift(current.title);
              }
            });
          };
        })(this));
      }
      return this.list;
    };

    ListBreadcrumbsDirective.prototype.getAllChild = function(data) {
      var i, _i, _ref, _results;
      this.list.push(data);
      if (data.folder) {
        _results = [];
        for (i = _i = 0, _ref = data.children.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(this.getAllChild(data.children[i]));
        }
        return _results;
      }
    };

    ListBreadcrumbsDirective.prototype.resize = function(scope) {};

    ListBreadcrumbsDirective.prototype.dispose = function(scope) {};

    return ListBreadcrumbsDirective;

  })(base.BaseDirective);
  return exports = {
    ListBreadcrumbsDirective: ListBreadcrumbsDirective
  };
});
