// Generated by IcedCoffeeScript 108.0.12

/*
* File: notice-tip2-directive
* User: David
* Date: 2019/12/24
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var NoticeTip2Directive, exports;
  NoticeTip2Directive = (function(_super) {
    __extends(NoticeTip2Directive, _super);

    function NoticeTip2Directive($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "notice-tip2";
      NoticeTip2Directive.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
      this.projectService = commonService.modelEngine.modelManager.getService("project");
    }

    NoticeTip2Directive.prototype.setScope = function() {};

    NoticeTip2Directive.prototype.setCSS = function() {
      return css;
    };

    NoticeTip2Directive.prototype.setTemplate = function() {
      return view;
    };

    NoticeTip2Directive.prototype.show = function(scope, element, attrs) {
      var init;
      init = (function(_this) {
        return function() {
          var filter;
          filter = {};
          filter.user = _this.$routeParams.user;
          filter.project = _this.$routeParams.project;
          return _this.projectService.query(filter, null, function(err, datas) {
            if (datas) {
              scope.text = datas.setting.desc;
              return scope.$applyAsync();
            }
          });
        };
      })(this);
      if (!scope.text) {
        return init();
      }
    };

    NoticeTip2Directive.prototype.resize = function(scope) {};

    NoticeTip2Directive.prototype.dispose = function(scope) {};

    return NoticeTip2Directive;

  })(base.BaseDirective);
  return exports = {
    NoticeTip2Directive: NoticeTip2Directive
  };
});
