// Generated by IcedCoffeeScript 108.0.11

/*
* File: pue-hmu2500-directive
* User: David
* Date: 2020/05/07
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var PueHmu2500Directive, exports;
  PueHmu2500Directive = (function(_super) {
    __extends(PueHmu2500Directive, _super);

    function PueHmu2500Directive($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "pue-hmu2500";
      PueHmu2500Directive.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    PueHmu2500Directive.prototype.setScope = function() {};

    PueHmu2500Directive.prototype.setCSS = function() {
      return css;
    };

    PueHmu2500Directive.prototype.setTemplate = function() {
      return view;
    };

    PueHmu2500Directive.prototype.show = function(scope, element, attrs) {
      var initData, queryDataBase;
      initData = (function(_this) {
        return function() {
          return scope.timeChoose = [
            {
              signal: "pue-value",
              mode: 'day',
              name: '日',
              period: moment().format('YYYY-MM-DD'),
              max: 8,
              min: 5,
              avg: 0
            }, {
              signal: "pue-value",
              mode: 'month',
              name: '月',
              period: moment().format('YYYY-MM'),
              max: 7,
              min: 4,
              avg: 0
            }, {
              signal: "pue-value",
              mode: 'year',
              name: '年',
              period: moment().format('YYYY'),
              max: 6,
              min: 3,
              avg: 0
            }
          ];
        };
      })(this);
      scope.getMaxAndMin = (function(_this) {
        return function($event, opt) {
          $('.date').removeClass('date-active');
          $($event.target).addClass('date-active');
          return queryDataBase(scope.station, opt, function(value) {
            return scope.pueValue = {
              max: value.max,
              min: value.min,
              avg: value.avg
            };
          });
        };
      })(this);
      queryDataBase = (function(_this) {
        return function(station, option, callback) {
          var filter;
          filter = {
            user: _this.$routeParams.user,
            project: _this.$routeParams.project,
            station: station.model.station,
            equipment: '_station_efficient',
            signal: option.signal,
            period: option.period,
            mode: option.mode
          };
          return _this.commonService.reportingService.querySignalStatistics({
            filter: filter
          }, function(err, records) {
            if (err) {
              return;
            }
            if (!_.isEmpty(records)) {
              return _.mapObject(records, function(val) {
                return typeof callback === "function" ? callback(val.values[0]) : void 0;
              });
            }
          });
        };
      })(this);
      return this.subscribeEventBus('stationId', (function(_this) {
        return function(d) {
          initData();
          return _this.commonService.loadStation(d.message.stationId, function(err, station) {
            return scope.station = station;
          });
        };
      })(this));
    };

    PueHmu2500Directive.prototype.resize = function(scope) {};

    PueHmu2500Directive.prototype.dispose = function(scope) {};

    return PueHmu2500Directive;

  })(base.BaseDirective);
  return exports = {
    PueHmu2500Directive: PueHmu2500Directive
  };
});
