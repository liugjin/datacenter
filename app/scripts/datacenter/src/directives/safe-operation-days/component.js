// Generated by IcedCoffeeScript 108.0.13

/*
* File: safe-operation-days-directive
* User: David
* Date: 2019/02/19
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var SafeOperationDaysDirective, exports;
  SafeOperationDaysDirective = (function(_super) {
    __extends(SafeOperationDaysDirective, _super);

    function SafeOperationDaysDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "safe-operation-days";
      SafeOperationDaysDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    SafeOperationDaysDirective.prototype.setScope = function() {};

    SafeOperationDaysDirective.prototype.setCSS = function() {
      return css;
    };

    SafeOperationDaysDirective.prototype.setTemplate = function() {
      return view;
    };

    SafeOperationDaysDirective.prototype.show = function(scope, element, attrs) {
      scope.station = scope.project.stations.items[0];
      if (scope != null) {
        scope.station.loadEquipment("_station_management", null, (function(_this) {
          return function(err, equipment) {
            return equipment != null ? equipment.loadProperties(null, function(err, properties) {
              var safetimestr;
              safetimestr = _.find(properties, function(property) {
                return property.model.property === "safe-time";
              });
              return scope.value = moment().diff(safetimestr != null ? safetimestr.model.value : void 0, "days").toString();
            }) : void 0;
          };
        })(this));
      }
      if (!scope.value) {
        return scope.value = 100;
      }
    };

    SafeOperationDaysDirective.prototype.resize = function(scope) {};

    SafeOperationDaysDirective.prototype.dispose = function(scope) {};

    return SafeOperationDaysDirective;

  })(base.BaseDirective);
  return exports = {
    SafeOperationDaysDirective: SafeOperationDaysDirective
  };
});
