// Generated by IcedCoffeeScript 108.0.11

/*
* File: station-breadcrumbs-directive
* User: David
* Date: 2018/11/01
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var StationBreadcrumbsDirective, exports;
  StationBreadcrumbsDirective = (function(_super) {
    __extends(StationBreadcrumbsDirective, _super);

    function StationBreadcrumbsDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "station-breadcrumbs";
      StationBreadcrumbsDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    StationBreadcrumbsDirective.prototype.setScope = function() {};

    StationBreadcrumbsDirective.prototype.setCSS = function() {
      return css;
    };

    StationBreadcrumbsDirective.prototype.setTemplate = function() {
      return view;
    };

    StationBreadcrumbsDirective.prototype.show = function(scope, element, attrs) {
      var publishStationId, _ref, _ref1;
      element.css("display", "block");
      publishStationId = (function(_this) {
        return function() {
          var _ref, _ref1;
          return _this.commonService.publishEventBus("stationId", {
            stationId: (_ref = scope.station) != null ? (_ref1 = _ref.model) != null ? _ref1.station : void 0 : void 0
          });
        };
      })(this);
      scope.datacenters = _.filter(scope.project.stations.items, function(sta) {
        return _.isEmpty(sta.model.parent) && sta.model.station.charAt(0) !== "_";
      });
      scope.parents = [];
      this.findParent(scope, scope.station);
      scope.stations = (_ref = (_ref1 = scope.parents[0]) != null ? _ref1.stations : void 0) != null ? _ref : scope.datacenters;
      scope.parents = scope.parents.reverse();
      scope.selectStation = function(station) {
        scope.station = station;
        return publishStationId();
      };
      scope.selectChild = function(station) {
        scope.stations = scope.station.stations;
        scope.parents.push(scope.station);
        scope.station = station;
        return publishStationId();
      };
      return scope.selectParent = function(station) {
        var index, _ref2, _ref3;
        index = scope.parents.indexOf(station);
        scope.parents.splice(index, scope.parents.length - index);
        scope.station = station;
        scope.stations = (_ref2 = (_ref3 = station.parentStation) != null ? _ref3.stations : void 0) != null ? _ref2 : scope.datacenters;
        return publishStationId();
      };
    };

    StationBreadcrumbsDirective.prototype.findParent = function(scope, station) {
      var parent;
      parent = _.find(scope.project.stations.items, function(sta) {
        return sta.model.station === station.model.parent;
      });
      if (parent) {
        scope.parents.push(parent);
        return this.findParent(scope, parent);
      }
    };

    StationBreadcrumbsDirective.prototype.dispose = function(scope) {};

    return StationBreadcrumbsDirective;

  })(base.BaseDirective);
  return exports = {
    StationBreadcrumbsDirective: StationBreadcrumbsDirective
  };
});
