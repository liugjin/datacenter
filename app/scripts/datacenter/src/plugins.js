// Generated by IcedCoffeeScript 108.0.13
if (typeof define !== 'function') { var define = require('amdefine')(module) };
define(['angular', 'json!./directives/plugins.json'], function(angular, plugins) {
  var camelCaseName, createDirective, exports, module, plugin, _i, _len;
  module = angular.module('clc.plugins', ['clc.materialize']);
  camelCaseName = function(name, notFirst) {
    var i, name2, word, words, _i, _len;
    name2 = '';
    words = name.split('-');
    for (i = _i = 0, _len = words.length; _i < _len; i = ++_i) {
      word = words[i];
      if (i === 0 && notFirst) {
        name2 += word;
      } else {
        name2 += "" + (word[0].toUpperCase()) + (word.substr(1));
      }
    }
    return name2;
  };
  createDirective = function(plugin) {
    var name, type;
    name = camelCaseName(plugin.id, true);
    type = camelCaseName(plugin.id, false) + "Directive";
    return require(["./src/directives/" + plugin.id + "/component"], function(com) {
      return module.directive(name, [
        '$timeout', '$window', '$compile', '$routeParams', 'commonService', function($timeout, $window, $compile, $routeParams, commonService) {
          return new com[type]($timeout, $window, $compile, $routeParams, commonService);
        }
      ]);
    });
  };
  for (_i = 0, _len = plugins.length; _i < _len; _i++) {
    plugin = plugins[_i];
    createDirective(plugin);
  }
  return exports = {
    'clc.plugins': module
  };
});
