// Generated by IcedCoffeeScript 108.0.13

/*
* File: changeStoreModel-service
* User: foam
* Date: 2020/05/22
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['clc.foundation.web', 'child_process', 'fs', 'underscore', 'path'], function(base, process, fs, _, path) {
  var TimeManageService, exports;
  TimeManageService = (function(_super) {
    __extends(TimeManageService, _super);

    function TimeManageService(options) {
      TimeManageService.__super__.constructor.call(this, options);
    }

    TimeManageService.prototype.getServiceTime = function(callback) {
      var serviceTime;
      serviceTime = new Date();
      return typeof callback === "function" ? callback(null, {
        time: serviceTime
      }) : void 0;
    };

    TimeManageService.prototype.changeServiceTime = function(options, callback) {
      var serviceTime;
      process.exec('date -s "' + options.parameters.time + '"');
      serviceTime = new Date();
      return typeof callback === "function" ? callback(null, {
        time: serviceTime
      }) : void 0;
    };

    TimeManageService.prototype.saveNTPIP = function(options, callback) {
      var data, infos, ntpConf, serviceTime, src;
      console.log("options", options);
      process.exec("ntpdate -u " + options.parameters.ip);
      src = path.join(__dirname, "../../../../");
      if (!fs.existsSync("" + src + "/ntp.json")) {
        fs.writeFileSync("" + src + "/ntp.json", JSON.stringify([]));
      }
      ntpConf = JSON.parse(fs.readFileSync("" + src + "/ntp.json"));
      data = {
        "ntpIP": options.parameters.ip
      };
      if (ntpConf.length > 0) {
        ntpConf.splice(0, ntpConf.length);
      }
      ntpConf.push(data);
      infos = JSON.stringify(ntpConf, null, 2);
      fs.writeFileSync("" + src + "/ntp.json", infos);
      serviceTime = new Date();
      return typeof callback === "function" ? callback(null, {
        ntpIp: options.parameters.ip,
        time: serviceTime
      }) : void 0;
    };

    TimeManageService.prototype.getNTPIP = function(callback) {
      var ntpConf, src;
      src = path.join(__dirname, "../../../../");
      if (fs.existsSync("" + src + "/ntp.json")) {
        ntpConf = JSON.parse(fs.readFileSync("" + src + "/ntp.json"));
        console.log("ntpConf", ntpConf);
        return typeof callback === "function" ? callback(null, ntpConf) : void 0;
      } else {
        return callback({
          _err: "未找到ntp.json"
        });
      }
    };

    return TimeManageService;

  })(base.MqttService);
  return exports = {
    TimeManageService: TimeManageService
  };
});
